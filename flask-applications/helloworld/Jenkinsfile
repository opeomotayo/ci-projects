def app

pipeline {
    options {
        skipStagesAfterUnstable()
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    agent {
        kubernetes {
            // label "-${UUID.randomUUID()}"
            yamlFile 'build-pod.yaml'
            defaultContainer 'devops-tools'      
        }
    }

    stages {
         stage('Clone repository') { 
            steps { 
                script {
                    checkout scm
                }
            }
        }

        stage('Build image') { 
            steps {
                dir('flask-applications/helloworld') {
                    script {
                        app = docker.build("opeomotayo/hello-world")
                    }
                }
            }
        }

        stage('Test image') {
            steps {
                script {
                    app.inside {
                        sh 'echo "Tests passed"'
                    }
                }
            }
        }

        stage('Push image') {
            steps { 
                script {       
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-access') {
                        app.push("${env.BUILD_NUMBER}")
                    }
                }
            }
        }
        
        // stage('Trigger ManifestUpdate') {
        //     echo "triggering updatemanifestjob"
        //     build job: 'updatemanifest', parameters: [string(name: 'DOCKERTAG', value: env.BUILD_NUMBER)]
        // }
    }
}
