def app

pipeline {
  options {
    skipStagesAfterUnstable()
  }
  triggers {
    githubPush()
  }
  agent {
    kubernetes {
      yamlFile 'build-pod.yaml'
      defaultContainer 'devops-tools'      
    }
  }

  stages {
    stage('Clone Repository') { 
      steps { 
        script {
          checkout scm
        }
      }
    }

    stage('Build Image') { 
      steps {
        dir('dsl/pipelines/flask-app1') {
          script {
              app = docker.build("opeomotayo/flask-app1")
          }
        }
      }
    }

    // stage('Test Image') {
    //     steps {
    //         script {
    //             app.inside {
    //                 sh 'echo "Tests passed"'
    //             }
    //         }
    //     }
    // }

    stage('Push Image') {
        steps { 
            script {       
                docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-access') {
                    app.push("${env.BUILD_NUMBER}")
                }
            }
        }
    }
    
    stage('Update ImageTag') {
      steps { 
        script {  
          sh "printenv"
          echo "triggering the pipeline that updates deployment image tag"
          build job: 'flask-app1-update-tag', parameters: [string(name: 'DOCKERTAG', value: "${env.BUILD_NUMBER}")]
        }
      }    
    }
  }
}
