pipeline {
  
  agent {
    kubernetes {
      yamlFile 'build-pod.yaml'
      defaultContainer 'devops-tools'      
    }
  }

  environment {
    scannerHome = tool 'sonarqube-scanner'
  }
  options {
    skipStagesAfterUnstable()
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }

  parameters { 
    string(name: 'APP_NAME', defaultValue: '', description: 'What is the Java app name?') 
  }
  stages {
    
    stage('Build Image') { 
      steps {
        dir('dsl/pipelines/java-app1') {
          script {
              app = docker.build("opeomotayo/java-app1")
          }
        }
      }
    }

  stages {
    stage('Scan') {
      steps {
        steps {
        withSonarQubeEnv('sonarqube-server') {
          sh "${scannerHome}/bin/sonar-scanner"
        }
        timeout(time: 10, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
    }
      }
    }
  }

    stage('Push Image') {
      steps { 
          script {       
              docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-access') {
                app.push("${env.BUILD_NUMBER}")
              }
          }
      }
    }

  post {
    always {
      sh 'docker logout'
    }
  }
}